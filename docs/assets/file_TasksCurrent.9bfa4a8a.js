import{a as D,A as s,o as h,c as A,x as n,q as i,e as u,b as m,s as c,t as o}from"./file_index.ee37999b.js";import{T as l}from"./file_TaskList.17000c3d.js";const g={__name:"TasksCurrent",setup(y){const r=D(),a=(t,e)=>t.startDate<e.startDate?1:t.startDate>e.startDate?-1:t.refreshedAt<e.refreshedAt?1:t.refreshedAt>e.refreshedAt?-1:0,p=(t,e)=>t.startDate<e.startDate?-1:t.startDate>e.startDate||t.refreshedAt<e.refreshedAt?1:t.refreshedAt>e.refreshedAt?-1:0,f=s(()=>(console.log("computed critical"),r.tasks.filter(t=>t.priority===o.critical&&!t.isArchived).sort((t,e)=>a(t,e)))),d=s(()=>(console.log("computed opportunity"),r.tasks.filter(t=>t.priority===o.opportunity&&!t.isArchived&&new Date(t.startDate)<=Date.now()).sort((t,e)=>a(t,e)))),k=s(()=>(console.log("computed horizon"),r.tasks.filter(t=>t.priority===o.horizon&&!t.isArchived&&new Date(t.startDate)<=Date.now()).sort((t,e)=>a(t,e))));return s(()=>(console.log("computed opportunity postponed"),r.tasks.filter(t=>t.priority===o.opportunity&&new Date(t.startDate)>Date.now()).sort((t,e)=>p(t,e)))),s(()=>(console.log("computed horizon postponed"),r.tasks.filter(t=>t.priority===o.horizon&&new Date(t.startDate)>Date.now()).sort((t,e)=>p(t,e)))),h(async()=>{await r.getAllTasks()}),(t,e)=>(m(),A("div",null,[n(l,{tasks:u(f)},{default:i(()=>[c("Critical")]),_:1},8,["tasks"]),n(l,{tasks:u(d)},{default:i(()=>[c("Opportunity")]),_:1},8,["tasks"]),n(l,{tasks:u(k)},{default:i(()=>[c("Horizon")]),_:1},8,["tasks"])]))}};export{g as default};
