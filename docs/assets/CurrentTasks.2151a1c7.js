import{a as _,t as s}from"./tasks.00301769.js";import{T as n}from"./TaskList.f0bbd764.js";import{q as D,s as o,o as m,c as h,i,j as u,u as c,a as y,k as l}from"./index.d2713152.js";import"./supabase.c5c58315.js";const w={__name:"CurrentTasks",setup(A){const r=_(),a=(t,e)=>t.startDate<e.startDate?1:t.startDate>e.startDate?-1:t.refreshedAt<e.refreshedAt?1:t.refreshedAt>e.refreshedAt?-1:0,p=(t,e)=>t.startDate<e.startDate?-1:t.startDate>e.startDate||t.refreshedAt<e.refreshedAt?1:t.refreshedAt>e.refreshedAt?-1:0,f=o(()=>(console.log("computed critical"),r.tasks.filter(t=>t.priority===s.critical).sort((t,e)=>a(t,e)))),d=o(()=>(console.log("computed opportunity"),r.tasks.filter(t=>t.priority===s.opportunity&&new Date(t.startDate)<=Date.now()).sort((t,e)=>a(t,e)))),k=o(()=>(console.log("computed horizon"),r.tasks.filter(t=>t.priority===s.horizon&&new Date(t.startDate)<=Date.now()).sort((t,e)=>a(t,e))));return o(()=>(console.log("computed opportunity postponed"),r.tasks.filter(t=>t.priority===s.opportunity&&new Date(t.startDate)>Date.now()).sort((t,e)=>p(t,e)))),o(()=>(console.log("computed horizon postponed"),r.tasks.filter(t=>t.priority===s.horizon&&new Date(t.startDate)>Date.now()).sort((t,e)=>p(t,e)))),m(async()=>{await r.getAllTasks()}),(t,e)=>(y(),h("div",null,[i(n,{tasks:c(f)},{default:u(()=>[l("Critical")]),_:1},8,["tasks"]),i(n,{tasks:c(d)},{default:u(()=>[l("Opportunity")]),_:1},8,["tasks"]),i(n,{tasks:c(k)},{default:u(()=>[l("Horizon")]),_:1},8,["tasks"])]))}},C=D(w,[["__scopeId","data-v-767d798c"]]);export{C as default};
